{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
<h1>Report</h1>
<div>
    <h2 id="kmom01">Kmom01</h2>
    <p>
        Mina förkunskaper om objectorientering är från kursen oopyhton där jag lärt mig det mesta men jag har även 
        kodat lite i C++ där jag använt mig objectorientering. Jag skulle dock säga att jag är väl ganska komortabel 
        med object men jag skulle ljuga om jag sa att jag kan det 100% det är ofta jag behöver stanna upp och tänka till lite. 
        PHP är ett objektorienterat språk som låter dig skapa klasser och objekt. 
        Du definierar egenskaper och metoder i klassen. Med __construct() kan 
        du sätta startvärden. Nyckelord som public och private styr åtkomst. $this används för att referera till objektets egna data.
        Koden som skrivs i uppgiften me/report skulle jag säga är ganska simpel objectorientering, jag begriper mig på allt i koden 
        och hur allt hänger ihop. Jag skulle säga att detta kmom var mer för att starta upp med symfony än att skriva kod.
        I “PHP The Right Way” skulle jag vilja djupdyka lite mer i Databases och Security det är två områden som tilltalar mig enormt.
        Mitt TIL för detta kmom är mest hur man startar igång med ett ramverk "påriktigt" jag har tyckt tidigare när vi jobbat med ramverk 
        att vi bara har fått en instruktion och följa och då har jag verefall inte tänkt så mycket på vad man gör. Medans nu kändes det som att 
        man satte upp det mesta själv och jag förstår verkligen hur jag kan använda detta till när jag i sommar ska göra lite pyssel. :)
    </p>
    <h2 id="kmom02">Kmom02</h2>
    <p>
        Arv innebär att en klass ärver egenskaper och metoder från en annan klass, komposition betyder att en klass innehåller en instans av en annan klass “har en”, 
        ett interface definierar en uppsättning metoder som en klass måste implementera, traits är som återanvändbara kodmoduler de låter dig återanvända metoder 
        i flera klasser utan arv. Jag började med att skapa upp strukturen för själva uppgiften och kollade igenom alla krav så jag visste ungefär vad som skulle 
        göras, sedan valde jag att skapa upp klasserna då jag vet ungefär vilda metoder som krävs (självklart behövdes det ju läggas till några, men ocksp några som 
        inte används). Jag skulle säga att jag är nöjd med kursmomentet då jag hade lite mindre tid denna vecka men tycker jag fick till allt bra kanske lite style som 
        skulle behövas lösas lite bättre (pluss att komma ihog att göra fler taggar), i min kod skulle jag kunna se lite förbättrningar genom att göra den mer dry 
        men också att skriva lite snabbare kod. Men jag skulle säga att jag är nöjd ändå. jag tycker att jag kommit igång bra med symfony och skulle säga att jag 
        förstår det ganska så bra, jag skulle väl säga att det inte är super svårt, jag har ibland fastnat lite men det har rett ut sig väldigt fort ändå. TIL för 
        detta kmom är att som jag nämde förra veckan så var jag inte 100% säker på allt med arv och kompossetion, men jag skulle säga att det har suttit sig mycket bättre. :)
    </p>
    <h2 id="kmom03">Kmom03</h2>
    <p>
       Jag failade totalt med att göra flödesdiagram och psuedokod jag gjorde ett försök till att tolka vad det var innan jag ens sökt upp eller kollat föreläsning, 
       klantigt av mig. Men jag har väldigt bra bild minne och kan tänka i bilder om det makes sens, så jag gör typ alltid upp flödesdiagram / tankekarta i huvet innan 
       men självklart hjälper det att skriva ner det. Jag gjorde ett blackjack spel (väldigt simpelt) jag älskar blackjack har redan gjort ett för många år sedan i 
       gymnastet i pygame så jag har lite fördel där, men jag tänkte inte på att det tar lite längre tid och att tiden barsa sprang iväg. Men jag är nöjd med mitt simpla 
       blackjack, jag la mest krut på att fixa split funktion så testa gärna den (tog väldigt lång tid, men när jag bestämt mig för att fixa den ska jag göra det). Jag ser 
       väldigt mycket förbättringspotential i design men också typ att man kan vara fler spelare, att man kan satsa olika mycket i potten just nu är det bra 10 hela tiden. 
       Jag vet inte vad som var bäst, för när jag skapade split funktionaliteten så skapade jag nya fuktioner och template filen pga så jag tolkade soc så det inte blir massa 
       if satser i twigfiler osv, återkom gärna hur du tycker det ser ut med de delarna och om du hade gjort det annorlunda och varför. :)
       Min känsla så här långt in i kursen är att det är helt gryyyymt, tycker båda kurserna som går nu är super roliga så det blir lite att ena veckan nördar jag in mig i 
       ena kursen och tvärt om nästa (det är dock omedvetet, sitter och gråttar mig in i små detaljer sen kommer jag på shit juste jag har en till kurs...). Att koda i symfony 
       känns bra så här långt skulle jag säga, ibland är det saker man inte förstår men tycker att det är lätt att söka sig till en lösning. Min TIL för detta kmom är väl alla 
       lintar men annars att jag blir mer och mer säker på objectorientering och ramverk symfony. :)
    </p>
    <h2 id="kmom04">Kmom04</h2>
    <p>
        Jag jobbar som testar till viss del men mest att testa funktioner så de beter sig korrekt enligt kraven, inte att jag testar koden. Men tanken är att jag ska röra mig 
        mer ditåt vilket gjorde att jag valde att nörda ner mig en del i testningen. Men vi har också skrivit tester i python så det var inte super svårt mer än att veta hur 
        man ska skriva koden, tanke sättet är redan där skulle jag säga. Jag tror att jag nådde minst 90% kodtäckning, jag körde tills allt blev grönt i coverage. Jag upplevde 
        att mina klasser var ganska lätta att testa, det var bara conroller klasserna jag fick kämpa och nörde ner mig lite (såg nu i discord att man inte behövde testa controllerna) 
        men det är ju alltid bra och veta hur man gör det. Mina controllers är skriva ganska lika så jag hittade ett sätt att skirva ett test så gick det och modifiera rätt lätt sedan. 
        Jag skrev om lite attribut så som privat till protected då det blev lättare och testa då men inte så mycket mer än då. Jag skulle säga att en testbar kod är en kod som är snygg. 
        Jag valde detta kmom att lägga mer krut på själva testningen än att få alla lintar gröna (nu klagar den på controller testerna bara, vilket kanske är ok då man inte skulle 
        skriva tester till de). Mitt TIL för detta kmom är allt med PHPUnit och PHPUnit i syfony. :)
    </p>
    <h2 id="kmom05">Kmom05</h2>
    <p>
        Att jobba igenom övningen med Symfony och Doctrine gick bra jag känner väl där att jag behöver köra igenom Doctrine lite mer så det verkligen sitter 
        jag skulle säga att jag har koll på det men behöver söka upp lite saker mellan verven. Jag tänkte på följande sätt när jag skapade min applikation 
        att när man går till bibloteket så ser man alla böcker och dess info, vill man skapa en bok kan man gå ner på sidan där kan man även "nollsätlla" 
        bibloteket till sin start. Man kan sedan klicka på en bok för att där få upp vyn med bara den boken, där kan du uppdatera information om boken om man 
        vill det och du kan även ta bort boken från bibloteket. Det är så jag kännde att det var mest logiskt. Vi har jobbat mycket med CRUD tidigare så det 
        känner jag mig bekväm med. Jag skulle ändå säga att det finns likheter här och i tex databas kursen som gjorde det lätt att tänka hur koden ska funekra. 
        Jag upplever att ORM underlättar arbetet genom att integrera databasen direkt med objekt i applikationskoden, vilket gör att man slipper skriva rå SQL 
        vid varje databasoperation. Samtidigt tycker jag att det var enklare och mer överskådligt att arbeta med stored procedures och CALL-kommandon som vi 
        gjorde i databaskursen. Då låg affärslogiken tydligt på databasnivå, vilket gjorde transaktionerna blev lättare att följa, särskilt när 
        det gällde komplexa operationer. Med ORM upplever jag att det ibland blir mer dolt vad som händer under ytan, vilket kan göra felsökning och förståelse 
        lite svårare. Min TIL för detta kmom var mycekt med Doctrine. Tack för en bra vecka :)
    </p>
    <h2 id="kmom06">Kmom06</h2>
    <p>
        Jag uppfattade verktyget PHPMetrics som ett super bra stöd för att få se kvaliteten på sin kod, jag tycekte det var sjukt tydligt och sjukt bra 
        mätvärden som man fick ut. Jag upplevde att comlexiteten var väldigt bra och få ut då jag innan bara skrivit kod utan att tänka så mycket på den 
        biten, sedan tycker jag den översikten med blobbar över ens kod var sjukt värdefull. Att jobba med Scrutinizer tycker jag inte lika mycket om som 
        PHPMetrics då jag tycker att den gav bra väden fast det kasnke inte var så bra om man djupdök lite, lite svårare att hitta sina värden och bara allmänt 
        otydligare så i mina egna privata project kommer jag använda mig väldigt mycekt av PHPMetrics då jag tycker det var till suuuuper stor hjälp. Jag tycker 
        nu att min kod blivit mycket bättre mätvärderna är inte så mycket bättre men hela koden är sååå mycket lättare att läsa/förstå mycket lättare att testa 
        och bara allmänt trevligare och inb telika "köttig" utan mer uppdelad mer logiskt. Jag tycker att detta kmom varit det bästa i hela programmet jag har lärt mig 
        så mycket som jag inte tänkt på men också att jag vajre gpng jag skriver kod nu tänker på dessa aspekter som med 6c och att det inte blir att jag behöver ändra 
        massa i eftehand utan att jag skriver kod med det i tanken. Min TIL för detta kmom var helt kalr 6c. Tack för ännu en grym vecka! :)
    </p>
</div>
{% endblock %}